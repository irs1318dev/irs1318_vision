Before you can build, you must first set a couple environment variables based on your OpenCV installation location:
1. Named OPENCV_JAR which is the absolute path to the opencv_410.jar file.
2. Named OPENCV_LIB which is the absolute path of the directory where the corresponding opencv_410 library is located.

To download OpenCV releases:
https://github.com/opencv/opencv/releases
https://medium.com/macoclock/setting-up-mac-for-opencv-java-development-with-intellij-idea-fd2153eb634f 

For me, this is:
Windows:	C:\opencv\build\java\opencv-410.jar and C:\opencv\build\java\x64\
RPI:		/usr/local/share/OpenCV/java/opencv-410.jar and /usr/local/share/OpenCV/java/

On Windows you can set the environment variable using Control Panel->System->Advanced->Environment Variables.
On Linux, run "export OPENCV_JAR=..." for temporary variables, or add the key-value pair (KEY=VALUE) to /etc/environment.  Requires system reboot.

Once I have built the jar on the local machine, I can run it by running the following:
Windows:	java -jar -Djava.library.path=%OPENCV_LIB% build\libs\irs1318_vision-1.0.jar
RPI:		java -jar -Djava.library.path=$OPENCV_LIB build/libs/irs1318_vision-1.0.jar

Once it can run on the RPI, you can set it up to run as a service.  To do so:
1. Copy irs1318vision.service to /etc/systemd/system/irs1318vision.service
2. Run: sudo systemctl daemon-reload 
3. Run: sudo systemctl start irs1318vision.service
4. Run: sudo systemctl enable irs1318vision.service

You can run the following to check a service's status:						sudo systemctl status irs1318vision.service
You can run the following to read a service's output to stdout and stderr:	sudo journalctl -u irs1318vision